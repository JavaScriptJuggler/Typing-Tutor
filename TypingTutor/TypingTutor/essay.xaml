<Window x:Class="TypingTutor.essay"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TypingTutor"
        mc:Ignorable="d"
        Title="essay" Height="493.807" Width="850" WindowState="Maximized" Loaded="load">
    <Window.Resources>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FFDDDDDD"/>
            <Setter Property="BorderBrush" Value="#FF707070"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="Foreground" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="Brush1" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0" SpreadMethod="Reflect">
            <GradientStop Color="White" Offset="1"/>
            <GradientStop Color="#FFD3FFD1"/>
            <GradientStop Color="#FF6AFB64" Offset="0.518"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Brush2" Color="#FFFF8E8E"/>
        <Style x:Key="ProgressBarStyle1" TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="#FF06B025"/>
            <Setter Property="Background" Value="#FFE6E6E6"/>
            <Setter Property="BorderBrush" Value="#FFBCBCBC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" RenderTransformOrigin="0,0" ToolTip="Progress Bar"/>
                            <Rectangle x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                                <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="True">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Border BorderBrush="Black" CornerRadius="5" BorderThickness="2" Margin="10,10,10,38" Background="#FFEFFFD7">
            <TextBox x:Name="textBox" Background="#EFFFD7" BorderBrush="#FFD2F59F" TextWrapping="Wrap" Text="Write Here ..." Margin="8,219,230,27" FontSize="20" BorderThickness="0,3,0,0" PreviewKeyDown="textBox_PreviewKeyDown" MouseDown="MouseDown"/>
        </Border>

        <TextBlock x:Name="textBlock" TextAlignment="Center" FontSize="20" TextWrapping="Wrap" Text="TextBlock" Margin="32,33,256,246"/>

        <Label x:Name="label" Content="Write down the above text here" HorizontalAlignment="Left" Margin="20,207,0,0" Foreground="Red" FontWeight="Bold" Height="25" VerticalAlignment="Top"/>
        <Border Margin="0,25,27,47" Background="#FFD2F59F" CornerRadius="10" HorizontalAlignment="Right" Width="208">
            <Canvas>
                <Label x:Name="label_Copy" Content="Set Timer" HorizontalAlignment="Left" VerticalAlignment="Bottom" Foreground="Red" FontWeight="Bold" Canvas.Top="84" Canvas.Left="10" FontSize="15"/>
            </Canvas>

        </Border>
        <ProgressBar x:Name="bar" Margin="24,0,240,45" Foreground="Red" Maximum="960" RenderTransformOrigin="0.5,0.5" Style="{DynamicResource ProgressBarStyle1}" Height="19" VerticalAlignment="Bottom" >
            <ProgressBar.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="-1"/>
                    <SkewTransform/>
                    <RotateTransform Angle="180"/>
                    <TranslateTransform/>
                </TransformGroup>
            </ProgressBar.RenderTransform>
        </ProgressBar>
        <ComboBox x:Name="comboBox" Text="Select Time" HorizontalAlignment="Right" Margin="0,138,60,0" VerticalAlignment="Top" Width="158" SelectionChanged="selection_change" Height="30" ToolTip="Select Timer"/>
        <Button x:Name="button" Content="Start Typing !!" Margin="0,0,44,62" HorizontalAlignment="Right" Width="174" Style="{DynamicResource ButtonStyle1}" Background="{DynamicResource Brush1}" Click="button_Click" Foreground="Black" FontWeight="Bold" Height="44" VerticalAlignment="Bottom" ToolTip="Start Typing"/>
        <Label x:Name="label1" Content="1." HorizontalAlignment="Right" Margin="0,43,158,0" VerticalAlignment="Top" Width="60" FontSize="40" FontWeight="Bold" Foreground="#FF8CA36A"/>
        <Label x:Name="label1_Copy1" Content="3." HorizontalAlignment="Right" Margin="0,0,154,109" Width="60" FontSize="40" FontWeight="Bold" Foreground="#FF8CA36A" Height="63" VerticalAlignment="Bottom"/>
        <Rectangle Fill="{DynamicResource Brush2}" Height="30" Margin="0,62,213,0" Stroke="Transparent" VerticalAlignment="Top" StrokeThickness="0" HorizontalAlignment="Right" Width="7"/>
        <Rectangle Fill="{DynamicResource Brush2}" Margin="0,189,211,244" Stroke="Transparent" StrokeThickness="0" HorizontalAlignment="Right" Width="7" Height="30" VerticalAlignment="Center"/>
        <Rectangle Fill="{DynamicResource Brush2}" Height="30" Margin="0,0,211,125" Stroke="Transparent" VerticalAlignment="Bottom" StrokeThickness="0" HorizontalAlignment="Right" Width="7"/>
        <Label x:Name="label1_Copy" Content="2." HorizontalAlignment="Right" Width="60" FontSize="40" FontWeight="Bold" Foreground="#FF8CA36A" Margin="0,168,154,231" Height="64" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
        <Label x:Name="label_Copy1" Content="Select Text" Foreground="Red" FontWeight="Bold" FontSize="15" Margin="0,230,137,203" Height="30" VerticalAlignment="Center" HorizontalAlignment="Right" Width="86"/>
        <ComboBox x:Name="comboBox_Copy" Text="Select Time" HorizontalAlignment="Right" Width="89" SelectionChanged="selection_change1" Margin="0,256,131,177" Height="30" VerticalAlignment="Center" ToolTip="Select Text to Type"/>
        <Button x:Name="button1" Content="Add Text" HorizontalAlignment="Right" Width="80" Click="button1_Click" Margin="0,255,44,177" Height="31" VerticalAlignment="Center" ToolTip="Add new file"/>
        <Border BorderBrush="Black" Background="Blue" CornerRadius="10" BorderThickness="1" Height="27" Margin="10,0,10,5" VerticalAlignment="Bottom"/>
        <Canvas Margin="20,0,27,9" Height="19" VerticalAlignment="Bottom">
            <Label x:Name="label2" Content="Label" HorizontalAlignment="Left" Height="25" VerticalAlignment="Top" Canvas.Left="8" Canvas.Top="-3" Foreground="White" FontWeight="SemiBold"/>
        </Canvas>
        <Ellipse Fill="Red" Stroke="Transparent" StrokeThickness="0" Margin="0,0,27,12" HorizontalAlignment="Right" Width="12" Height="12" VerticalAlignment="Bottom"/>
    </Grid>
</Window>
